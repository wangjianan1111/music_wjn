<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bjfu.notation_jh.dao.MusicSynthesisMapper">
    <resultMap id="BaseResultMap" type="com.bjfu.notation_jh.model.MusicSynthesis">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Jan 15 11:05:12 CST 2019.
        -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="uid" property="uid" jdbcType="VARCHAR"/>
        <result column="singer" property="singer" jdbcType="BIGINT"/>
        <result column="music_name" property="musicName" jdbcType="VARCHAR"/>
        <result column="music_type" property="musicType" jdbcType="VARCHAR"/>
        <result column="isPublic" property="isPublic" jdbcType="INTEGER"/>
        <result column="image_url" property="imageUrl" jdbcType="VARCHAR"/>
        <result column="finished" property="finished" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="music_id" property="musicId" jdbcType="VARCHAR"/>
        <result column="notation_id" property="notationId" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, singer, music_name, music_type, isPublic, image_url, finished,uid, create_time,music_id,notation_id
    </sql>

    <!--增加用户歌声合成记录-->
    <insert id="addMusicSynthesisRecord" useGeneratedKeys="true" keyProperty="musicSynthesis.id" parameterType="com.bjfu.notation_jh.model.MusicSynthesis">
        insert into t_music_synthesis (singer, music_name, music_type, isPublic,image_url,finished,uid,create_time,notation_id)
        values (#{musicSynthesis.singer}, #{musicSynthesis.musicName}, #{musicSynthesis.musicType},
                #{musicSynthesis.isPublic}, #{musicSynthesis.imageUrl}, #{musicSynthesis.finished},#{musicSynthesis.uid},#{musicSynthesis.createTime},#{musicSynthesis.notationId})
    </insert>

    <!-- 更新合成记录表 -->
    <update id="updateMusicSynthesis" parameterType="com.bjfu.notation_jh.model.MusicSynthesis">
        update t_music_synthesis
        <set>
            <if test="music.finished != null">
                finished = #{music.finished,jdbcType=INTEGER},
            </if>
            <if test="music.musicId != null">
                music_id = #{music.musicId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{music.id}
    </update>

    <!-- 更新合成记录表通过musicid -->
    <update id="updateMusicSynthesisByMusicId" parameterType="com.bjfu.notation_jh.model.MusicSynthesis">
        update t_music_synthesis
        <set>
            <if test="music.finished != null">
                finished = #{music.finished,jdbcType=INTEGER},
            </if>
        </set>
        where music_id = #{music.musicId}
    </update>

    <!--获取finished状态的记录数据-->
    <select id="queryFinishedMusic" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM t_music_synthesis
        where finished = #{finished}
    </select>
</mapper>





















